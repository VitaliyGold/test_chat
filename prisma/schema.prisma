
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model AuthData {
  id Int @id @default(autoincrement())
  login String @unique
  password String
  Profile ProfileData?
  userId String @unique @db.Uuid
}

model TokenBlackList {
  token String
  @@id([token])
}

model ProfileData {
  name String
  authData AuthData @relation(fields: userId, references: userId)
  userId String @unique @db.Uuid
  avatarLink String @default("")
  userDescription String @default("")
  userLink String @default("")
  chatsMembersList ChatsMembersData[]
  chatsData ChatsData[]
  messages MessagesData[]
  @@id([userId])
  createdAt DateTime @default(now())
}


model ChatsData {
  id Int @id @default(autoincrement())
  chatType Int @default(1) @db.SmallInt
  chatId String @unique
  owner ProfileData @relation(fields: [ownerId], references: [userId])
  ownerId String @db.Uuid
  member ChatsMembersData[]
  messages MessagesData[]
  createdAt DateTime @default(now())
}

model ChatsMembersData {
  id Int @id @default(autoincrement())
  chatId String
  userId String @db.Uuid
  chat ChatsData @relation(fields: chatId, references: chatId)
  user ProfileData @relation(fields: [userId], references: [userId])
}

model MessagesData {
  chatId String
  messageId String @id @unique @default(uuid())
  chat ChatsData @relation(fields: chatId, references: chatId)
  ownerId String @db.Uuid
  owner ProfileData @relation(fields: ownerId, references: userId)
  messageText String
  createdAt DateTime @default(now())
}